/*
 * Basis Theory API
 * ## Getting Started * Sign-in to [Basis Theory](https://basistheory.com) and go to [Applications](https://portal.basistheory.com/applications) * Create a Basis Theory Private Application * All permissions should be selected * Paste the API Key into the `BT-API-KEY` variable
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.basistheory;

import java.util.Objects;
import java.util.Arrays;
import com.basistheory.ThreeDSAcsRenderingType;
import com.basistheory.ThreeDSMessageExtension;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.basistheory.JSON;

/**
 * ThreeDSAuthentication
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ThreeDSAuthentication {
  public static final String SERIALIZED_NAME_THREEDS_VERSION = "threeds_version";
  @SerializedName(SERIALIZED_NAME_THREEDS_VERSION)
  private String threedsVersion;

  public static final String SERIALIZED_NAME_ACS_TRANSACTION_ID = "acs_transaction_id";
  @SerializedName(SERIALIZED_NAME_ACS_TRANSACTION_ID)
  private UUID acsTransactionId;

  public static final String SERIALIZED_NAME_DS_TRANSACTION_ID = "ds_transaction_id";
  @SerializedName(SERIALIZED_NAME_DS_TRANSACTION_ID)
  private UUID dsTransactionId;

  public static final String SERIALIZED_NAME_SDK_TRANSACTION_ID = "sdk_transaction_id";
  @SerializedName(SERIALIZED_NAME_SDK_TRANSACTION_ID)
  private UUID sdkTransactionId;

  public static final String SERIALIZED_NAME_ACS_REFERENCE_NUMBER = "acs_reference_number";
  @SerializedName(SERIALIZED_NAME_ACS_REFERENCE_NUMBER)
  private String acsReferenceNumber;

  public static final String SERIALIZED_NAME_DS_REFERENCE_NUMBER = "ds_reference_number";
  @SerializedName(SERIALIZED_NAME_DS_REFERENCE_NUMBER)
  private String dsReferenceNumber;

  public static final String SERIALIZED_NAME_AUTHENTICATION_VALUE = "authentication_value";
  @SerializedName(SERIALIZED_NAME_AUTHENTICATION_VALUE)
  private String authenticationValue;

  public static final String SERIALIZED_NAME_AUTHENTICATION_STATUS = "authentication_status";
  @SerializedName(SERIALIZED_NAME_AUTHENTICATION_STATUS)
  private String authenticationStatus;

  public static final String SERIALIZED_NAME_AUTHENTICATION_STATUS_REASON = "authentication_status_reason";
  @SerializedName(SERIALIZED_NAME_AUTHENTICATION_STATUS_REASON)
  private String authenticationStatusReason;

  public static final String SERIALIZED_NAME_ECI = "eci";
  @SerializedName(SERIALIZED_NAME_ECI)
  private String eci;

  public static final String SERIALIZED_NAME_ACS_CHALLENGE_MANDATED = "acs_challenge_mandated";
  @SerializedName(SERIALIZED_NAME_ACS_CHALLENGE_MANDATED)
  private String acsChallengeMandated;

  public static final String SERIALIZED_NAME_ACS_DECOUPLED_AUTHENTICATION = "acs_decoupled_authentication";
  @SerializedName(SERIALIZED_NAME_ACS_DECOUPLED_AUTHENTICATION)
  private String acsDecoupledAuthentication;

  public static final String SERIALIZED_NAME_AUTHENTICATION_CHALLENGE_TYPE = "authentication_challenge_type";
  @SerializedName(SERIALIZED_NAME_AUTHENTICATION_CHALLENGE_TYPE)
  private String authenticationChallengeType;

  public static final String SERIALIZED_NAME_ACS_RENDERING_TYPE = "acs_rendering_type";
  @SerializedName(SERIALIZED_NAME_ACS_RENDERING_TYPE)
  private ThreeDSAcsRenderingType acsRenderingType;

  public static final String SERIALIZED_NAME_ACS_SIGNED_CONTENT = "acs_signed_content";
  @SerializedName(SERIALIZED_NAME_ACS_SIGNED_CONTENT)
  private String acsSignedContent;

  public static final String SERIALIZED_NAME_ACS_CHALLENGE_URL = "acs_challenge_url";
  @SerializedName(SERIALIZED_NAME_ACS_CHALLENGE_URL)
  private String acsChallengeUrl;

  public static final String SERIALIZED_NAME_CHALLENGE_ATTEMPTS = "challenge_attempts";
  @SerializedName(SERIALIZED_NAME_CHALLENGE_ATTEMPTS)
  private String challengeAttempts;

  public static final String SERIALIZED_NAME_CHALLENGE_CANCEL_REASON = "challenge_cancel_reason";
  @SerializedName(SERIALIZED_NAME_CHALLENGE_CANCEL_REASON)
  private String challengeCancelReason;

  public static final String SERIALIZED_NAME_CARDHOLDER_INFO = "cardholder_info";
  @SerializedName(SERIALIZED_NAME_CARDHOLDER_INFO)
  private String cardholderInfo;

  public static final String SERIALIZED_NAME_WHITELIST_STATUS = "whitelist_status";
  @SerializedName(SERIALIZED_NAME_WHITELIST_STATUS)
  private String whitelistStatus;

  public static final String SERIALIZED_NAME_WHITELIST_STATUS_SOURCE = "whitelist_status_source";
  @SerializedName(SERIALIZED_NAME_WHITELIST_STATUS_SOURCE)
  private String whitelistStatusSource;

  public static final String SERIALIZED_NAME_MESSAGE_EXTENSIONS = "message_extensions";
  @SerializedName(SERIALIZED_NAME_MESSAGE_EXTENSIONS)
  private List<ThreeDSMessageExtension> messageExtensions = null;

  public ThreeDSAuthentication() {
  }

  public ThreeDSAuthentication threedsVersion(String threedsVersion) {
    
    this.threedsVersion = threedsVersion;
    return this;
  }

   /**
   * Get threedsVersion
   * @return threedsVersion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getThreedsVersion() {
    return threedsVersion;
  }


  public void setThreedsVersion(String threedsVersion) {
    this.threedsVersion = threedsVersion;
  }


  public ThreeDSAuthentication acsTransactionId(UUID acsTransactionId) {
    
    this.acsTransactionId = acsTransactionId;
    return this;
  }

   /**
   * Get acsTransactionId
   * @return acsTransactionId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UUID getAcsTransactionId() {
    return acsTransactionId;
  }


  public void setAcsTransactionId(UUID acsTransactionId) {
    this.acsTransactionId = acsTransactionId;
  }


  public ThreeDSAuthentication dsTransactionId(UUID dsTransactionId) {
    
    this.dsTransactionId = dsTransactionId;
    return this;
  }

   /**
   * Get dsTransactionId
   * @return dsTransactionId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UUID getDsTransactionId() {
    return dsTransactionId;
  }


  public void setDsTransactionId(UUID dsTransactionId) {
    this.dsTransactionId = dsTransactionId;
  }


  public ThreeDSAuthentication sdkTransactionId(UUID sdkTransactionId) {
    
    this.sdkTransactionId = sdkTransactionId;
    return this;
  }

   /**
   * Get sdkTransactionId
   * @return sdkTransactionId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UUID getSdkTransactionId() {
    return sdkTransactionId;
  }


  public void setSdkTransactionId(UUID sdkTransactionId) {
    this.sdkTransactionId = sdkTransactionId;
  }


  public ThreeDSAuthentication acsReferenceNumber(String acsReferenceNumber) {
    
    this.acsReferenceNumber = acsReferenceNumber;
    return this;
  }

   /**
   * Get acsReferenceNumber
   * @return acsReferenceNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAcsReferenceNumber() {
    return acsReferenceNumber;
  }


  public void setAcsReferenceNumber(String acsReferenceNumber) {
    this.acsReferenceNumber = acsReferenceNumber;
  }


  public ThreeDSAuthentication dsReferenceNumber(String dsReferenceNumber) {
    
    this.dsReferenceNumber = dsReferenceNumber;
    return this;
  }

   /**
   * Get dsReferenceNumber
   * @return dsReferenceNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDsReferenceNumber() {
    return dsReferenceNumber;
  }


  public void setDsReferenceNumber(String dsReferenceNumber) {
    this.dsReferenceNumber = dsReferenceNumber;
  }


  public ThreeDSAuthentication authenticationValue(String authenticationValue) {
    
    this.authenticationValue = authenticationValue;
    return this;
  }

   /**
   * Get authenticationValue
   * @return authenticationValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAuthenticationValue() {
    return authenticationValue;
  }


  public void setAuthenticationValue(String authenticationValue) {
    this.authenticationValue = authenticationValue;
  }


  public ThreeDSAuthentication authenticationStatus(String authenticationStatus) {
    
    this.authenticationStatus = authenticationStatus;
    return this;
  }

   /**
   * Get authenticationStatus
   * @return authenticationStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAuthenticationStatus() {
    return authenticationStatus;
  }


  public void setAuthenticationStatus(String authenticationStatus) {
    this.authenticationStatus = authenticationStatus;
  }


  public ThreeDSAuthentication authenticationStatusReason(String authenticationStatusReason) {
    
    this.authenticationStatusReason = authenticationStatusReason;
    return this;
  }

   /**
   * Get authenticationStatusReason
   * @return authenticationStatusReason
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAuthenticationStatusReason() {
    return authenticationStatusReason;
  }


  public void setAuthenticationStatusReason(String authenticationStatusReason) {
    this.authenticationStatusReason = authenticationStatusReason;
  }


  public ThreeDSAuthentication eci(String eci) {
    
    this.eci = eci;
    return this;
  }

   /**
   * Get eci
   * @return eci
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEci() {
    return eci;
  }


  public void setEci(String eci) {
    this.eci = eci;
  }


  public ThreeDSAuthentication acsChallengeMandated(String acsChallengeMandated) {
    
    this.acsChallengeMandated = acsChallengeMandated;
    return this;
  }

   /**
   * Get acsChallengeMandated
   * @return acsChallengeMandated
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAcsChallengeMandated() {
    return acsChallengeMandated;
  }


  public void setAcsChallengeMandated(String acsChallengeMandated) {
    this.acsChallengeMandated = acsChallengeMandated;
  }


  public ThreeDSAuthentication acsDecoupledAuthentication(String acsDecoupledAuthentication) {
    
    this.acsDecoupledAuthentication = acsDecoupledAuthentication;
    return this;
  }

   /**
   * Get acsDecoupledAuthentication
   * @return acsDecoupledAuthentication
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAcsDecoupledAuthentication() {
    return acsDecoupledAuthentication;
  }


  public void setAcsDecoupledAuthentication(String acsDecoupledAuthentication) {
    this.acsDecoupledAuthentication = acsDecoupledAuthentication;
  }


  public ThreeDSAuthentication authenticationChallengeType(String authenticationChallengeType) {
    
    this.authenticationChallengeType = authenticationChallengeType;
    return this;
  }

   /**
   * Get authenticationChallengeType
   * @return authenticationChallengeType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAuthenticationChallengeType() {
    return authenticationChallengeType;
  }


  public void setAuthenticationChallengeType(String authenticationChallengeType) {
    this.authenticationChallengeType = authenticationChallengeType;
  }


  public ThreeDSAuthentication acsRenderingType(ThreeDSAcsRenderingType acsRenderingType) {
    
    this.acsRenderingType = acsRenderingType;
    return this;
  }

   /**
   * Get acsRenderingType
   * @return acsRenderingType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ThreeDSAcsRenderingType getAcsRenderingType() {
    return acsRenderingType;
  }


  public void setAcsRenderingType(ThreeDSAcsRenderingType acsRenderingType) {
    this.acsRenderingType = acsRenderingType;
  }


  public ThreeDSAuthentication acsSignedContent(String acsSignedContent) {
    
    this.acsSignedContent = acsSignedContent;
    return this;
  }

   /**
   * Get acsSignedContent
   * @return acsSignedContent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAcsSignedContent() {
    return acsSignedContent;
  }


  public void setAcsSignedContent(String acsSignedContent) {
    this.acsSignedContent = acsSignedContent;
  }


  public ThreeDSAuthentication acsChallengeUrl(String acsChallengeUrl) {
    
    this.acsChallengeUrl = acsChallengeUrl;
    return this;
  }

   /**
   * Get acsChallengeUrl
   * @return acsChallengeUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAcsChallengeUrl() {
    return acsChallengeUrl;
  }


  public void setAcsChallengeUrl(String acsChallengeUrl) {
    this.acsChallengeUrl = acsChallengeUrl;
  }


  public ThreeDSAuthentication challengeAttempts(String challengeAttempts) {
    
    this.challengeAttempts = challengeAttempts;
    return this;
  }

   /**
   * Get challengeAttempts
   * @return challengeAttempts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getChallengeAttempts() {
    return challengeAttempts;
  }


  public void setChallengeAttempts(String challengeAttempts) {
    this.challengeAttempts = challengeAttempts;
  }


  public ThreeDSAuthentication challengeCancelReason(String challengeCancelReason) {
    
    this.challengeCancelReason = challengeCancelReason;
    return this;
  }

   /**
   * Get challengeCancelReason
   * @return challengeCancelReason
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getChallengeCancelReason() {
    return challengeCancelReason;
  }


  public void setChallengeCancelReason(String challengeCancelReason) {
    this.challengeCancelReason = challengeCancelReason;
  }


  public ThreeDSAuthentication cardholderInfo(String cardholderInfo) {
    
    this.cardholderInfo = cardholderInfo;
    return this;
  }

   /**
   * Get cardholderInfo
   * @return cardholderInfo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCardholderInfo() {
    return cardholderInfo;
  }


  public void setCardholderInfo(String cardholderInfo) {
    this.cardholderInfo = cardholderInfo;
  }


  public ThreeDSAuthentication whitelistStatus(String whitelistStatus) {
    
    this.whitelistStatus = whitelistStatus;
    return this;
  }

   /**
   * Get whitelistStatus
   * @return whitelistStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getWhitelistStatus() {
    return whitelistStatus;
  }


  public void setWhitelistStatus(String whitelistStatus) {
    this.whitelistStatus = whitelistStatus;
  }


  public ThreeDSAuthentication whitelistStatusSource(String whitelistStatusSource) {
    
    this.whitelistStatusSource = whitelistStatusSource;
    return this;
  }

   /**
   * Get whitelistStatusSource
   * @return whitelistStatusSource
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getWhitelistStatusSource() {
    return whitelistStatusSource;
  }


  public void setWhitelistStatusSource(String whitelistStatusSource) {
    this.whitelistStatusSource = whitelistStatusSource;
  }


  public ThreeDSAuthentication messageExtensions(List<ThreeDSMessageExtension> messageExtensions) {
    
    this.messageExtensions = messageExtensions;
    return this;
  }

  public ThreeDSAuthentication addMessageExtensionsItem(ThreeDSMessageExtension messageExtensionsItem) {
    if (this.messageExtensions == null) {
      this.messageExtensions = new ArrayList<>();
    }
    this.messageExtensions.add(messageExtensionsItem);
    return this;
  }

   /**
   * Get messageExtensions
   * @return messageExtensions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<ThreeDSMessageExtension> getMessageExtensions() {
    return messageExtensions;
  }


  public void setMessageExtensions(List<ThreeDSMessageExtension> messageExtensions) {
    this.messageExtensions = messageExtensions;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ThreeDSAuthentication threeDSAuthentication = (ThreeDSAuthentication) o;
    return Objects.equals(this.threedsVersion, threeDSAuthentication.threedsVersion) &&
        Objects.equals(this.acsTransactionId, threeDSAuthentication.acsTransactionId) &&
        Objects.equals(this.dsTransactionId, threeDSAuthentication.dsTransactionId) &&
        Objects.equals(this.sdkTransactionId, threeDSAuthentication.sdkTransactionId) &&
        Objects.equals(this.acsReferenceNumber, threeDSAuthentication.acsReferenceNumber) &&
        Objects.equals(this.dsReferenceNumber, threeDSAuthentication.dsReferenceNumber) &&
        Objects.equals(this.authenticationValue, threeDSAuthentication.authenticationValue) &&
        Objects.equals(this.authenticationStatus, threeDSAuthentication.authenticationStatus) &&
        Objects.equals(this.authenticationStatusReason, threeDSAuthentication.authenticationStatusReason) &&
        Objects.equals(this.eci, threeDSAuthentication.eci) &&
        Objects.equals(this.acsChallengeMandated, threeDSAuthentication.acsChallengeMandated) &&
        Objects.equals(this.acsDecoupledAuthentication, threeDSAuthentication.acsDecoupledAuthentication) &&
        Objects.equals(this.authenticationChallengeType, threeDSAuthentication.authenticationChallengeType) &&
        Objects.equals(this.acsRenderingType, threeDSAuthentication.acsRenderingType) &&
        Objects.equals(this.acsSignedContent, threeDSAuthentication.acsSignedContent) &&
        Objects.equals(this.acsChallengeUrl, threeDSAuthentication.acsChallengeUrl) &&
        Objects.equals(this.challengeAttempts, threeDSAuthentication.challengeAttempts) &&
        Objects.equals(this.challengeCancelReason, threeDSAuthentication.challengeCancelReason) &&
        Objects.equals(this.cardholderInfo, threeDSAuthentication.cardholderInfo) &&
        Objects.equals(this.whitelistStatus, threeDSAuthentication.whitelistStatus) &&
        Objects.equals(this.whitelistStatusSource, threeDSAuthentication.whitelistStatusSource) &&
        Objects.equals(this.messageExtensions, threeDSAuthentication.messageExtensions);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(threedsVersion, acsTransactionId, dsTransactionId, sdkTransactionId, acsReferenceNumber, dsReferenceNumber, authenticationValue, authenticationStatus, authenticationStatusReason, eci, acsChallengeMandated, acsDecoupledAuthentication, authenticationChallengeType, acsRenderingType, acsSignedContent, acsChallengeUrl, challengeAttempts, challengeCancelReason, cardholderInfo, whitelistStatus, whitelistStatusSource, messageExtensions);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ThreeDSAuthentication {\n");
    sb.append("    threedsVersion: ").append(toIndentedString(threedsVersion)).append("\n");
    sb.append("    acsTransactionId: ").append(toIndentedString(acsTransactionId)).append("\n");
    sb.append("    dsTransactionId: ").append(toIndentedString(dsTransactionId)).append("\n");
    sb.append("    sdkTransactionId: ").append(toIndentedString(sdkTransactionId)).append("\n");
    sb.append("    acsReferenceNumber: ").append(toIndentedString(acsReferenceNumber)).append("\n");
    sb.append("    dsReferenceNumber: ").append(toIndentedString(dsReferenceNumber)).append("\n");
    sb.append("    authenticationValue: ").append(toIndentedString(authenticationValue)).append("\n");
    sb.append("    authenticationStatus: ").append(toIndentedString(authenticationStatus)).append("\n");
    sb.append("    authenticationStatusReason: ").append(toIndentedString(authenticationStatusReason)).append("\n");
    sb.append("    eci: ").append(toIndentedString(eci)).append("\n");
    sb.append("    acsChallengeMandated: ").append(toIndentedString(acsChallengeMandated)).append("\n");
    sb.append("    acsDecoupledAuthentication: ").append(toIndentedString(acsDecoupledAuthentication)).append("\n");
    sb.append("    authenticationChallengeType: ").append(toIndentedString(authenticationChallengeType)).append("\n");
    sb.append("    acsRenderingType: ").append(toIndentedString(acsRenderingType)).append("\n");
    sb.append("    acsSignedContent: ").append(toIndentedString(acsSignedContent)).append("\n");
    sb.append("    acsChallengeUrl: ").append(toIndentedString(acsChallengeUrl)).append("\n");
    sb.append("    challengeAttempts: ").append(toIndentedString(challengeAttempts)).append("\n");
    sb.append("    challengeCancelReason: ").append(toIndentedString(challengeCancelReason)).append("\n");
    sb.append("    cardholderInfo: ").append(toIndentedString(cardholderInfo)).append("\n");
    sb.append("    whitelistStatus: ").append(toIndentedString(whitelistStatus)).append("\n");
    sb.append("    whitelistStatusSource: ").append(toIndentedString(whitelistStatusSource)).append("\n");
    sb.append("    messageExtensions: ").append(toIndentedString(messageExtensions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("threeds_version");
    openapiFields.add("acs_transaction_id");
    openapiFields.add("ds_transaction_id");
    openapiFields.add("sdk_transaction_id");
    openapiFields.add("acs_reference_number");
    openapiFields.add("ds_reference_number");
    openapiFields.add("authentication_value");
    openapiFields.add("authentication_status");
    openapiFields.add("authentication_status_reason");
    openapiFields.add("eci");
    openapiFields.add("acs_challenge_mandated");
    openapiFields.add("acs_decoupled_authentication");
    openapiFields.add("authentication_challenge_type");
    openapiFields.add("acs_rendering_type");
    openapiFields.add("acs_signed_content");
    openapiFields.add("acs_challenge_url");
    openapiFields.add("challenge_attempts");
    openapiFields.add("challenge_cancel_reason");
    openapiFields.add("cardholder_info");
    openapiFields.add("whitelist_status");
    openapiFields.add("whitelist_status_source");
    openapiFields.add("message_extensions");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ThreeDSAuthentication
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!ThreeDSAuthentication.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ThreeDSAuthentication is not found in the empty JSON string", ThreeDSAuthentication.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("threeds_version") != null && !jsonObj.get("threeds_version").isJsonNull()) && !jsonObj.get("threeds_version").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `threeds_version` to be a primitive type in the JSON string but got `%s`", jsonObj.get("threeds_version").toString()));
      }
      if ((jsonObj.get("acs_transaction_id") != null && !jsonObj.get("acs_transaction_id").isJsonNull()) && !jsonObj.get("acs_transaction_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `acs_transaction_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("acs_transaction_id").toString()));
      }
      if ((jsonObj.get("ds_transaction_id") != null && !jsonObj.get("ds_transaction_id").isJsonNull()) && !jsonObj.get("ds_transaction_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ds_transaction_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ds_transaction_id").toString()));
      }
      if ((jsonObj.get("sdk_transaction_id") != null && !jsonObj.get("sdk_transaction_id").isJsonNull()) && !jsonObj.get("sdk_transaction_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sdk_transaction_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sdk_transaction_id").toString()));
      }
      if ((jsonObj.get("acs_reference_number") != null && !jsonObj.get("acs_reference_number").isJsonNull()) && !jsonObj.get("acs_reference_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `acs_reference_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("acs_reference_number").toString()));
      }
      if ((jsonObj.get("ds_reference_number") != null && !jsonObj.get("ds_reference_number").isJsonNull()) && !jsonObj.get("ds_reference_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ds_reference_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ds_reference_number").toString()));
      }
      if ((jsonObj.get("authentication_value") != null && !jsonObj.get("authentication_value").isJsonNull()) && !jsonObj.get("authentication_value").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `authentication_value` to be a primitive type in the JSON string but got `%s`", jsonObj.get("authentication_value").toString()));
      }
      if ((jsonObj.get("authentication_status") != null && !jsonObj.get("authentication_status").isJsonNull()) && !jsonObj.get("authentication_status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `authentication_status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("authentication_status").toString()));
      }
      if ((jsonObj.get("authentication_status_reason") != null && !jsonObj.get("authentication_status_reason").isJsonNull()) && !jsonObj.get("authentication_status_reason").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `authentication_status_reason` to be a primitive type in the JSON string but got `%s`", jsonObj.get("authentication_status_reason").toString()));
      }
      if ((jsonObj.get("eci") != null && !jsonObj.get("eci").isJsonNull()) && !jsonObj.get("eci").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `eci` to be a primitive type in the JSON string but got `%s`", jsonObj.get("eci").toString()));
      }
      if ((jsonObj.get("acs_challenge_mandated") != null && !jsonObj.get("acs_challenge_mandated").isJsonNull()) && !jsonObj.get("acs_challenge_mandated").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `acs_challenge_mandated` to be a primitive type in the JSON string but got `%s`", jsonObj.get("acs_challenge_mandated").toString()));
      }
      if ((jsonObj.get("acs_decoupled_authentication") != null && !jsonObj.get("acs_decoupled_authentication").isJsonNull()) && !jsonObj.get("acs_decoupled_authentication").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `acs_decoupled_authentication` to be a primitive type in the JSON string but got `%s`", jsonObj.get("acs_decoupled_authentication").toString()));
      }
      if ((jsonObj.get("authentication_challenge_type") != null && !jsonObj.get("authentication_challenge_type").isJsonNull()) && !jsonObj.get("authentication_challenge_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `authentication_challenge_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("authentication_challenge_type").toString()));
      }
      // validate the optional field `acs_rendering_type`
      if (jsonObj.get("acs_rendering_type") != null && !jsonObj.get("acs_rendering_type").isJsonNull()) {
        ThreeDSAcsRenderingType.validateJsonObject(jsonObj.getAsJsonObject("acs_rendering_type"));
      }
      if ((jsonObj.get("acs_signed_content") != null && !jsonObj.get("acs_signed_content").isJsonNull()) && !jsonObj.get("acs_signed_content").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `acs_signed_content` to be a primitive type in the JSON string but got `%s`", jsonObj.get("acs_signed_content").toString()));
      }
      if ((jsonObj.get("acs_challenge_url") != null && !jsonObj.get("acs_challenge_url").isJsonNull()) && !jsonObj.get("acs_challenge_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `acs_challenge_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("acs_challenge_url").toString()));
      }
      if ((jsonObj.get("challenge_attempts") != null && !jsonObj.get("challenge_attempts").isJsonNull()) && !jsonObj.get("challenge_attempts").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `challenge_attempts` to be a primitive type in the JSON string but got `%s`", jsonObj.get("challenge_attempts").toString()));
      }
      if ((jsonObj.get("challenge_cancel_reason") != null && !jsonObj.get("challenge_cancel_reason").isJsonNull()) && !jsonObj.get("challenge_cancel_reason").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `challenge_cancel_reason` to be a primitive type in the JSON string but got `%s`", jsonObj.get("challenge_cancel_reason").toString()));
      }
      if ((jsonObj.get("cardholder_info") != null && !jsonObj.get("cardholder_info").isJsonNull()) && !jsonObj.get("cardholder_info").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cardholder_info` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cardholder_info").toString()));
      }
      if ((jsonObj.get("whitelist_status") != null && !jsonObj.get("whitelist_status").isJsonNull()) && !jsonObj.get("whitelist_status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `whitelist_status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("whitelist_status").toString()));
      }
      if ((jsonObj.get("whitelist_status_source") != null && !jsonObj.get("whitelist_status_source").isJsonNull()) && !jsonObj.get("whitelist_status_source").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `whitelist_status_source` to be a primitive type in the JSON string but got `%s`", jsonObj.get("whitelist_status_source").toString()));
      }
      if (jsonObj.get("message_extensions") != null && !jsonObj.get("message_extensions").isJsonNull()) {
        JsonArray jsonArraymessageExtensions = jsonObj.getAsJsonArray("message_extensions");
        if (jsonArraymessageExtensions != null) {
          // ensure the json data is an array
          if (!jsonObj.get("message_extensions").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `message_extensions` to be an array in the JSON string but got `%s`", jsonObj.get("message_extensions").toString()));
          }

          // validate the optional field `message_extensions` (array)
          for (int i = 0; i < jsonArraymessageExtensions.size(); i++) {
            ThreeDSMessageExtension.validateJsonObject(jsonArraymessageExtensions.get(i).getAsJsonObject());
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ThreeDSAuthentication.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ThreeDSAuthentication' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ThreeDSAuthentication> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ThreeDSAuthentication.class));

       return (TypeAdapter<T>) new TypeAdapter<ThreeDSAuthentication>() {
           @Override
           public void write(JsonWriter out, ThreeDSAuthentication value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ThreeDSAuthentication read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ThreeDSAuthentication given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ThreeDSAuthentication
  * @throws IOException if the JSON string is invalid with respect to ThreeDSAuthentication
  */
  public static ThreeDSAuthentication fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ThreeDSAuthentication.class);
  }

 /**
  * Convert an instance of ThreeDSAuthentication to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

