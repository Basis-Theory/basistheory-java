/*
 * Basis Theory API
 * ## Getting Started * Sign-in to [Basis Theory](https://basistheory.com) and go to [Applications](https://portal.basistheory.com/applications) * Create a Basis Theory Private Application * All permissions should be selected * Paste the API Key into the `BT-API-KEY` variable
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.basistheory;

import java.util.Objects;
import java.util.Arrays;
import com.basistheory.ThreeDSAddress;
import com.basistheory.ThreeDSCardholderAccountInfo;
import com.basistheory.ThreeDSCardholderAuthenticationInfo;
import com.basistheory.ThreeDSCardholderPhoneNumber;
import com.basistheory.ThreeDSPriorAuthenticationInfo;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.basistheory.JSON;

/**
 * ThreeDSCardholderInfo
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ThreeDSCardholderInfo {
  public static final String SERIALIZED_NAME_ACCOUNT_ID = "account_id";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_ID)
  private String accountId;

  public static final String SERIALIZED_NAME_ACCOUNT_TYPE = "account_type";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_TYPE)
  private String accountType;

  public static final String SERIALIZED_NAME_ACCOUNT_INFO = "account_info";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_INFO)
  private ThreeDSCardholderAccountInfo accountInfo;

  public static final String SERIALIZED_NAME_AUTHENTICATION_INFO = "authentication_info";
  @SerializedName(SERIALIZED_NAME_AUTHENTICATION_INFO)
  private ThreeDSCardholderAuthenticationInfo authenticationInfo;

  public static final String SERIALIZED_NAME_PRIOR_AUTHENTICATION_INFO = "prior_authentication_info";
  @SerializedName(SERIALIZED_NAME_PRIOR_AUTHENTICATION_INFO)
  private ThreeDSPriorAuthenticationInfo priorAuthenticationInfo;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_EMAIL = "email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  private String email;

  public static final String SERIALIZED_NAME_PHONE_NUMBER = "phone_number";
  @SerializedName(SERIALIZED_NAME_PHONE_NUMBER)
  private ThreeDSCardholderPhoneNumber phoneNumber;

  public static final String SERIALIZED_NAME_MOBILE_PHONE_NUMBER = "mobile_phone_number";
  @SerializedName(SERIALIZED_NAME_MOBILE_PHONE_NUMBER)
  private ThreeDSCardholderPhoneNumber mobilePhoneNumber;

  public static final String SERIALIZED_NAME_WORK_PHONE_NUMBER = "work_phone_number";
  @SerializedName(SERIALIZED_NAME_WORK_PHONE_NUMBER)
  private ThreeDSCardholderPhoneNumber workPhoneNumber;

  public static final String SERIALIZED_NAME_BILLING_SHIPPING_ADDRESS_MATCH = "billing_shipping_address_match";
  @SerializedName(SERIALIZED_NAME_BILLING_SHIPPING_ADDRESS_MATCH)
  private String billingShippingAddressMatch;

  public static final String SERIALIZED_NAME_BILLING_ADDRESS = "billing_address";
  @SerializedName(SERIALIZED_NAME_BILLING_ADDRESS)
  private ThreeDSAddress billingAddress;

  public static final String SERIALIZED_NAME_SHIPPING_ADDRESS = "shipping_address";
  @SerializedName(SERIALIZED_NAME_SHIPPING_ADDRESS)
  private ThreeDSAddress shippingAddress;

  public ThreeDSCardholderInfo() {
  }

  public ThreeDSCardholderInfo accountId(String accountId) {
    
    this.accountId = accountId;
    return this;
  }

   /**
   * Get accountId
   * @return accountId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAccountId() {
    return accountId;
  }


  public void setAccountId(String accountId) {
    this.accountId = accountId;
  }


  public ThreeDSCardholderInfo accountType(String accountType) {
    
    this.accountType = accountType;
    return this;
  }

   /**
   * Get accountType
   * @return accountType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAccountType() {
    return accountType;
  }


  public void setAccountType(String accountType) {
    this.accountType = accountType;
  }


  public ThreeDSCardholderInfo accountInfo(ThreeDSCardholderAccountInfo accountInfo) {
    
    this.accountInfo = accountInfo;
    return this;
  }

   /**
   * Get accountInfo
   * @return accountInfo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ThreeDSCardholderAccountInfo getAccountInfo() {
    return accountInfo;
  }


  public void setAccountInfo(ThreeDSCardholderAccountInfo accountInfo) {
    this.accountInfo = accountInfo;
  }


  public ThreeDSCardholderInfo authenticationInfo(ThreeDSCardholderAuthenticationInfo authenticationInfo) {
    
    this.authenticationInfo = authenticationInfo;
    return this;
  }

   /**
   * Get authenticationInfo
   * @return authenticationInfo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ThreeDSCardholderAuthenticationInfo getAuthenticationInfo() {
    return authenticationInfo;
  }


  public void setAuthenticationInfo(ThreeDSCardholderAuthenticationInfo authenticationInfo) {
    this.authenticationInfo = authenticationInfo;
  }


  public ThreeDSCardholderInfo priorAuthenticationInfo(ThreeDSPriorAuthenticationInfo priorAuthenticationInfo) {
    
    this.priorAuthenticationInfo = priorAuthenticationInfo;
    return this;
  }

   /**
   * Get priorAuthenticationInfo
   * @return priorAuthenticationInfo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ThreeDSPriorAuthenticationInfo getPriorAuthenticationInfo() {
    return priorAuthenticationInfo;
  }


  public void setPriorAuthenticationInfo(ThreeDSPriorAuthenticationInfo priorAuthenticationInfo) {
    this.priorAuthenticationInfo = priorAuthenticationInfo;
  }


  public ThreeDSCardholderInfo name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public ThreeDSCardholderInfo email(String email) {
    
    this.email = email;
    return this;
  }

   /**
   * Get email
   * @return email
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEmail() {
    return email;
  }


  public void setEmail(String email) {
    this.email = email;
  }


  public ThreeDSCardholderInfo phoneNumber(ThreeDSCardholderPhoneNumber phoneNumber) {
    
    this.phoneNumber = phoneNumber;
    return this;
  }

   /**
   * Get phoneNumber
   * @return phoneNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ThreeDSCardholderPhoneNumber getPhoneNumber() {
    return phoneNumber;
  }


  public void setPhoneNumber(ThreeDSCardholderPhoneNumber phoneNumber) {
    this.phoneNumber = phoneNumber;
  }


  public ThreeDSCardholderInfo mobilePhoneNumber(ThreeDSCardholderPhoneNumber mobilePhoneNumber) {
    
    this.mobilePhoneNumber = mobilePhoneNumber;
    return this;
  }

   /**
   * Get mobilePhoneNumber
   * @return mobilePhoneNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ThreeDSCardholderPhoneNumber getMobilePhoneNumber() {
    return mobilePhoneNumber;
  }


  public void setMobilePhoneNumber(ThreeDSCardholderPhoneNumber mobilePhoneNumber) {
    this.mobilePhoneNumber = mobilePhoneNumber;
  }


  public ThreeDSCardholderInfo workPhoneNumber(ThreeDSCardholderPhoneNumber workPhoneNumber) {
    
    this.workPhoneNumber = workPhoneNumber;
    return this;
  }

   /**
   * Get workPhoneNumber
   * @return workPhoneNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ThreeDSCardholderPhoneNumber getWorkPhoneNumber() {
    return workPhoneNumber;
  }


  public void setWorkPhoneNumber(ThreeDSCardholderPhoneNumber workPhoneNumber) {
    this.workPhoneNumber = workPhoneNumber;
  }


  public ThreeDSCardholderInfo billingShippingAddressMatch(String billingShippingAddressMatch) {
    
    this.billingShippingAddressMatch = billingShippingAddressMatch;
    return this;
  }

   /**
   * Get billingShippingAddressMatch
   * @return billingShippingAddressMatch
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getBillingShippingAddressMatch() {
    return billingShippingAddressMatch;
  }


  public void setBillingShippingAddressMatch(String billingShippingAddressMatch) {
    this.billingShippingAddressMatch = billingShippingAddressMatch;
  }


  public ThreeDSCardholderInfo billingAddress(ThreeDSAddress billingAddress) {
    
    this.billingAddress = billingAddress;
    return this;
  }

   /**
   * Get billingAddress
   * @return billingAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ThreeDSAddress getBillingAddress() {
    return billingAddress;
  }


  public void setBillingAddress(ThreeDSAddress billingAddress) {
    this.billingAddress = billingAddress;
  }


  public ThreeDSCardholderInfo shippingAddress(ThreeDSAddress shippingAddress) {
    
    this.shippingAddress = shippingAddress;
    return this;
  }

   /**
   * Get shippingAddress
   * @return shippingAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ThreeDSAddress getShippingAddress() {
    return shippingAddress;
  }


  public void setShippingAddress(ThreeDSAddress shippingAddress) {
    this.shippingAddress = shippingAddress;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ThreeDSCardholderInfo threeDSCardholderInfo = (ThreeDSCardholderInfo) o;
    return Objects.equals(this.accountId, threeDSCardholderInfo.accountId) &&
        Objects.equals(this.accountType, threeDSCardholderInfo.accountType) &&
        Objects.equals(this.accountInfo, threeDSCardholderInfo.accountInfo) &&
        Objects.equals(this.authenticationInfo, threeDSCardholderInfo.authenticationInfo) &&
        Objects.equals(this.priorAuthenticationInfo, threeDSCardholderInfo.priorAuthenticationInfo) &&
        Objects.equals(this.name, threeDSCardholderInfo.name) &&
        Objects.equals(this.email, threeDSCardholderInfo.email) &&
        Objects.equals(this.phoneNumber, threeDSCardholderInfo.phoneNumber) &&
        Objects.equals(this.mobilePhoneNumber, threeDSCardholderInfo.mobilePhoneNumber) &&
        Objects.equals(this.workPhoneNumber, threeDSCardholderInfo.workPhoneNumber) &&
        Objects.equals(this.billingShippingAddressMatch, threeDSCardholderInfo.billingShippingAddressMatch) &&
        Objects.equals(this.billingAddress, threeDSCardholderInfo.billingAddress) &&
        Objects.equals(this.shippingAddress, threeDSCardholderInfo.shippingAddress);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountId, accountType, accountInfo, authenticationInfo, priorAuthenticationInfo, name, email, phoneNumber, mobilePhoneNumber, workPhoneNumber, billingShippingAddressMatch, billingAddress, shippingAddress);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ThreeDSCardholderInfo {\n");
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    accountType: ").append(toIndentedString(accountType)).append("\n");
    sb.append("    accountInfo: ").append(toIndentedString(accountInfo)).append("\n");
    sb.append("    authenticationInfo: ").append(toIndentedString(authenticationInfo)).append("\n");
    sb.append("    priorAuthenticationInfo: ").append(toIndentedString(priorAuthenticationInfo)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    phoneNumber: ").append(toIndentedString(phoneNumber)).append("\n");
    sb.append("    mobilePhoneNumber: ").append(toIndentedString(mobilePhoneNumber)).append("\n");
    sb.append("    workPhoneNumber: ").append(toIndentedString(workPhoneNumber)).append("\n");
    sb.append("    billingShippingAddressMatch: ").append(toIndentedString(billingShippingAddressMatch)).append("\n");
    sb.append("    billingAddress: ").append(toIndentedString(billingAddress)).append("\n");
    sb.append("    shippingAddress: ").append(toIndentedString(shippingAddress)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("account_id");
    openapiFields.add("account_type");
    openapiFields.add("account_info");
    openapiFields.add("authentication_info");
    openapiFields.add("prior_authentication_info");
    openapiFields.add("name");
    openapiFields.add("email");
    openapiFields.add("phone_number");
    openapiFields.add("mobile_phone_number");
    openapiFields.add("work_phone_number");
    openapiFields.add("billing_shipping_address_match");
    openapiFields.add("billing_address");
    openapiFields.add("shipping_address");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ThreeDSCardholderInfo
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!ThreeDSCardholderInfo.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ThreeDSCardholderInfo is not found in the empty JSON string", ThreeDSCardholderInfo.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("account_id") != null && !jsonObj.get("account_id").isJsonNull()) && !jsonObj.get("account_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `account_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("account_id").toString()));
      }
      if ((jsonObj.get("account_type") != null && !jsonObj.get("account_type").isJsonNull()) && !jsonObj.get("account_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `account_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("account_type").toString()));
      }
      // validate the optional field `account_info`
      if (jsonObj.get("account_info") != null && !jsonObj.get("account_info").isJsonNull()) {
        ThreeDSCardholderAccountInfo.validateJsonObject(jsonObj.getAsJsonObject("account_info"));
      }
      // validate the optional field `authentication_info`
      if (jsonObj.get("authentication_info") != null && !jsonObj.get("authentication_info").isJsonNull()) {
        ThreeDSCardholderAuthenticationInfo.validateJsonObject(jsonObj.getAsJsonObject("authentication_info"));
      }
      // validate the optional field `prior_authentication_info`
      if (jsonObj.get("prior_authentication_info") != null && !jsonObj.get("prior_authentication_info").isJsonNull()) {
        ThreeDSPriorAuthenticationInfo.validateJsonObject(jsonObj.getAsJsonObject("prior_authentication_info"));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("email") != null && !jsonObj.get("email").isJsonNull()) && !jsonObj.get("email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email").toString()));
      }
      // validate the optional field `phone_number`
      if (jsonObj.get("phone_number") != null && !jsonObj.get("phone_number").isJsonNull()) {
        ThreeDSCardholderPhoneNumber.validateJsonObject(jsonObj.getAsJsonObject("phone_number"));
      }
      // validate the optional field `mobile_phone_number`
      if (jsonObj.get("mobile_phone_number") != null && !jsonObj.get("mobile_phone_number").isJsonNull()) {
        ThreeDSCardholderPhoneNumber.validateJsonObject(jsonObj.getAsJsonObject("mobile_phone_number"));
      }
      // validate the optional field `work_phone_number`
      if (jsonObj.get("work_phone_number") != null && !jsonObj.get("work_phone_number").isJsonNull()) {
        ThreeDSCardholderPhoneNumber.validateJsonObject(jsonObj.getAsJsonObject("work_phone_number"));
      }
      if ((jsonObj.get("billing_shipping_address_match") != null && !jsonObj.get("billing_shipping_address_match").isJsonNull()) && !jsonObj.get("billing_shipping_address_match").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `billing_shipping_address_match` to be a primitive type in the JSON string but got `%s`", jsonObj.get("billing_shipping_address_match").toString()));
      }
      // validate the optional field `billing_address`
      if (jsonObj.get("billing_address") != null && !jsonObj.get("billing_address").isJsonNull()) {
        ThreeDSAddress.validateJsonObject(jsonObj.getAsJsonObject("billing_address"));
      }
      // validate the optional field `shipping_address`
      if (jsonObj.get("shipping_address") != null && !jsonObj.get("shipping_address").isJsonNull()) {
        ThreeDSAddress.validateJsonObject(jsonObj.getAsJsonObject("shipping_address"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ThreeDSCardholderInfo.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ThreeDSCardholderInfo' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ThreeDSCardholderInfo> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ThreeDSCardholderInfo.class));

       return (TypeAdapter<T>) new TypeAdapter<ThreeDSCardholderInfo>() {
           @Override
           public void write(JsonWriter out, ThreeDSCardholderInfo value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ThreeDSCardholderInfo read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ThreeDSCardholderInfo given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ThreeDSCardholderInfo
  * @throws IOException if the JSON string is invalid with respect to ThreeDSCardholderInfo
  */
  public static ThreeDSCardholderInfo fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ThreeDSCardholderInfo.class);
  }

 /**
  * Convert an instance of ThreeDSCardholderInfo to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

