/*
 * Basis Theory API
 * ## Getting Started * Sign-in to [Basis Theory](https://basistheory.com) and go to [Applications](https://portal.basistheory.com/applications) * Create a Basis Theory Private Application * All permissions should be selected * Paste the API Key into the `BT-API-KEY` variable
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.basistheory;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.basistheory.JSON;

/**
 * ThreeDSCardholderAccountInfo
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ThreeDSCardholderAccountInfo {
  public static final String SERIALIZED_NAME_ACCOUNT_AGE = "account_age";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_AGE)
  private String accountAge;

  public static final String SERIALIZED_NAME_ACCOUNT_LAST_CHANGED = "account_last_changed";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_LAST_CHANGED)
  private String accountLastChanged;

  public static final String SERIALIZED_NAME_ACCOUNT_CHANGE_DATE = "account_change_date";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_CHANGE_DATE)
  private String accountChangeDate;

  public static final String SERIALIZED_NAME_ACCOUNT_CREATED_DATE = "account_created_date";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_CREATED_DATE)
  private String accountCreatedDate;

  public static final String SERIALIZED_NAME_ACCOUNT_PWD_LAST_CHANGED = "account_pwd_last_changed";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_PWD_LAST_CHANGED)
  private String accountPwdLastChanged;

  public static final String SERIALIZED_NAME_ACCOUNT_PWD_CHANGE_DATE = "account_pwd_change_date";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_PWD_CHANGE_DATE)
  private String accountPwdChangeDate;

  public static final String SERIALIZED_NAME_PURCHASE_COUNT_HALF_YEAR = "purchase_count_half_year";
  @SerializedName(SERIALIZED_NAME_PURCHASE_COUNT_HALF_YEAR)
  private String purchaseCountHalfYear;

  public static final String SERIALIZED_NAME_TRANSACTION_COUNT_DAY = "transaction_count_day";
  @SerializedName(SERIALIZED_NAME_TRANSACTION_COUNT_DAY)
  private String transactionCountDay;

  public static final String SERIALIZED_NAME_PAYMENT_ACCOUNT_AGE = "payment_account_age";
  @SerializedName(SERIALIZED_NAME_PAYMENT_ACCOUNT_AGE)
  private String paymentAccountAge;

  public static final String SERIALIZED_NAME_TRANSACTION_COUNT_YEAR = "transaction_count_year";
  @SerializedName(SERIALIZED_NAME_TRANSACTION_COUNT_YEAR)
  private String transactionCountYear;

  public static final String SERIALIZED_NAME_PAYMENT_ACCOUNT_CREATED = "payment_account_created";
  @SerializedName(SERIALIZED_NAME_PAYMENT_ACCOUNT_CREATED)
  private String paymentAccountCreated;

  public static final String SERIALIZED_NAME_SHIPPING_ADDRESS_FIRST_USED = "shipping_address_first_used";
  @SerializedName(SERIALIZED_NAME_SHIPPING_ADDRESS_FIRST_USED)
  private String shippingAddressFirstUsed;

  public static final String SERIALIZED_NAME_SHIPPING_ADDRESS_USAGE_DATE = "shipping_address_usage_date";
  @SerializedName(SERIALIZED_NAME_SHIPPING_ADDRESS_USAGE_DATE)
  private String shippingAddressUsageDate;

  public static final String SERIALIZED_NAME_SHIPPING_ACCOUNT_NAME_MATCH = "shipping_account_name_match";
  @SerializedName(SERIALIZED_NAME_SHIPPING_ACCOUNT_NAME_MATCH)
  private Boolean shippingAccountNameMatch;

  public static final String SERIALIZED_NAME_SUSPICIOUS_ACTIVITY_OBSERVED = "suspicious_activity_observed";
  @SerializedName(SERIALIZED_NAME_SUSPICIOUS_ACTIVITY_OBSERVED)
  private Boolean suspiciousActivityObserved;

  public ThreeDSCardholderAccountInfo() {
  }

  public ThreeDSCardholderAccountInfo accountAge(String accountAge) {
    
    this.accountAge = accountAge;
    return this;
  }

   /**
   * Get accountAge
   * @return accountAge
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAccountAge() {
    return accountAge;
  }


  public void setAccountAge(String accountAge) {
    this.accountAge = accountAge;
  }


  public ThreeDSCardholderAccountInfo accountLastChanged(String accountLastChanged) {
    
    this.accountLastChanged = accountLastChanged;
    return this;
  }

   /**
   * Get accountLastChanged
   * @return accountLastChanged
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAccountLastChanged() {
    return accountLastChanged;
  }


  public void setAccountLastChanged(String accountLastChanged) {
    this.accountLastChanged = accountLastChanged;
  }


  public ThreeDSCardholderAccountInfo accountChangeDate(String accountChangeDate) {
    
    this.accountChangeDate = accountChangeDate;
    return this;
  }

   /**
   * Get accountChangeDate
   * @return accountChangeDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAccountChangeDate() {
    return accountChangeDate;
  }


  public void setAccountChangeDate(String accountChangeDate) {
    this.accountChangeDate = accountChangeDate;
  }


  public ThreeDSCardholderAccountInfo accountCreatedDate(String accountCreatedDate) {
    
    this.accountCreatedDate = accountCreatedDate;
    return this;
  }

   /**
   * Get accountCreatedDate
   * @return accountCreatedDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAccountCreatedDate() {
    return accountCreatedDate;
  }


  public void setAccountCreatedDate(String accountCreatedDate) {
    this.accountCreatedDate = accountCreatedDate;
  }


  public ThreeDSCardholderAccountInfo accountPwdLastChanged(String accountPwdLastChanged) {
    
    this.accountPwdLastChanged = accountPwdLastChanged;
    return this;
  }

   /**
   * Get accountPwdLastChanged
   * @return accountPwdLastChanged
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAccountPwdLastChanged() {
    return accountPwdLastChanged;
  }


  public void setAccountPwdLastChanged(String accountPwdLastChanged) {
    this.accountPwdLastChanged = accountPwdLastChanged;
  }


  public ThreeDSCardholderAccountInfo accountPwdChangeDate(String accountPwdChangeDate) {
    
    this.accountPwdChangeDate = accountPwdChangeDate;
    return this;
  }

   /**
   * Get accountPwdChangeDate
   * @return accountPwdChangeDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAccountPwdChangeDate() {
    return accountPwdChangeDate;
  }


  public void setAccountPwdChangeDate(String accountPwdChangeDate) {
    this.accountPwdChangeDate = accountPwdChangeDate;
  }


  public ThreeDSCardholderAccountInfo purchaseCountHalfYear(String purchaseCountHalfYear) {
    
    this.purchaseCountHalfYear = purchaseCountHalfYear;
    return this;
  }

   /**
   * Get purchaseCountHalfYear
   * @return purchaseCountHalfYear
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPurchaseCountHalfYear() {
    return purchaseCountHalfYear;
  }


  public void setPurchaseCountHalfYear(String purchaseCountHalfYear) {
    this.purchaseCountHalfYear = purchaseCountHalfYear;
  }


  public ThreeDSCardholderAccountInfo transactionCountDay(String transactionCountDay) {
    
    this.transactionCountDay = transactionCountDay;
    return this;
  }

   /**
   * Get transactionCountDay
   * @return transactionCountDay
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTransactionCountDay() {
    return transactionCountDay;
  }


  public void setTransactionCountDay(String transactionCountDay) {
    this.transactionCountDay = transactionCountDay;
  }


  public ThreeDSCardholderAccountInfo paymentAccountAge(String paymentAccountAge) {
    
    this.paymentAccountAge = paymentAccountAge;
    return this;
  }

   /**
   * Get paymentAccountAge
   * @return paymentAccountAge
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPaymentAccountAge() {
    return paymentAccountAge;
  }


  public void setPaymentAccountAge(String paymentAccountAge) {
    this.paymentAccountAge = paymentAccountAge;
  }


  public ThreeDSCardholderAccountInfo transactionCountYear(String transactionCountYear) {
    
    this.transactionCountYear = transactionCountYear;
    return this;
  }

   /**
   * Get transactionCountYear
   * @return transactionCountYear
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTransactionCountYear() {
    return transactionCountYear;
  }


  public void setTransactionCountYear(String transactionCountYear) {
    this.transactionCountYear = transactionCountYear;
  }


  public ThreeDSCardholderAccountInfo paymentAccountCreated(String paymentAccountCreated) {
    
    this.paymentAccountCreated = paymentAccountCreated;
    return this;
  }

   /**
   * Get paymentAccountCreated
   * @return paymentAccountCreated
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPaymentAccountCreated() {
    return paymentAccountCreated;
  }


  public void setPaymentAccountCreated(String paymentAccountCreated) {
    this.paymentAccountCreated = paymentAccountCreated;
  }


  public ThreeDSCardholderAccountInfo shippingAddressFirstUsed(String shippingAddressFirstUsed) {
    
    this.shippingAddressFirstUsed = shippingAddressFirstUsed;
    return this;
  }

   /**
   * Get shippingAddressFirstUsed
   * @return shippingAddressFirstUsed
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getShippingAddressFirstUsed() {
    return shippingAddressFirstUsed;
  }


  public void setShippingAddressFirstUsed(String shippingAddressFirstUsed) {
    this.shippingAddressFirstUsed = shippingAddressFirstUsed;
  }


  public ThreeDSCardholderAccountInfo shippingAddressUsageDate(String shippingAddressUsageDate) {
    
    this.shippingAddressUsageDate = shippingAddressUsageDate;
    return this;
  }

   /**
   * Get shippingAddressUsageDate
   * @return shippingAddressUsageDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getShippingAddressUsageDate() {
    return shippingAddressUsageDate;
  }


  public void setShippingAddressUsageDate(String shippingAddressUsageDate) {
    this.shippingAddressUsageDate = shippingAddressUsageDate;
  }


  public ThreeDSCardholderAccountInfo shippingAccountNameMatch(Boolean shippingAccountNameMatch) {
    
    this.shippingAccountNameMatch = shippingAccountNameMatch;
    return this;
  }

   /**
   * Get shippingAccountNameMatch
   * @return shippingAccountNameMatch
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getShippingAccountNameMatch() {
    return shippingAccountNameMatch;
  }


  public void setShippingAccountNameMatch(Boolean shippingAccountNameMatch) {
    this.shippingAccountNameMatch = shippingAccountNameMatch;
  }


  public ThreeDSCardholderAccountInfo suspiciousActivityObserved(Boolean suspiciousActivityObserved) {
    
    this.suspiciousActivityObserved = suspiciousActivityObserved;
    return this;
  }

   /**
   * Get suspiciousActivityObserved
   * @return suspiciousActivityObserved
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getSuspiciousActivityObserved() {
    return suspiciousActivityObserved;
  }


  public void setSuspiciousActivityObserved(Boolean suspiciousActivityObserved) {
    this.suspiciousActivityObserved = suspiciousActivityObserved;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ThreeDSCardholderAccountInfo threeDSCardholderAccountInfo = (ThreeDSCardholderAccountInfo) o;
    return Objects.equals(this.accountAge, threeDSCardholderAccountInfo.accountAge) &&
        Objects.equals(this.accountLastChanged, threeDSCardholderAccountInfo.accountLastChanged) &&
        Objects.equals(this.accountChangeDate, threeDSCardholderAccountInfo.accountChangeDate) &&
        Objects.equals(this.accountCreatedDate, threeDSCardholderAccountInfo.accountCreatedDate) &&
        Objects.equals(this.accountPwdLastChanged, threeDSCardholderAccountInfo.accountPwdLastChanged) &&
        Objects.equals(this.accountPwdChangeDate, threeDSCardholderAccountInfo.accountPwdChangeDate) &&
        Objects.equals(this.purchaseCountHalfYear, threeDSCardholderAccountInfo.purchaseCountHalfYear) &&
        Objects.equals(this.transactionCountDay, threeDSCardholderAccountInfo.transactionCountDay) &&
        Objects.equals(this.paymentAccountAge, threeDSCardholderAccountInfo.paymentAccountAge) &&
        Objects.equals(this.transactionCountYear, threeDSCardholderAccountInfo.transactionCountYear) &&
        Objects.equals(this.paymentAccountCreated, threeDSCardholderAccountInfo.paymentAccountCreated) &&
        Objects.equals(this.shippingAddressFirstUsed, threeDSCardholderAccountInfo.shippingAddressFirstUsed) &&
        Objects.equals(this.shippingAddressUsageDate, threeDSCardholderAccountInfo.shippingAddressUsageDate) &&
        Objects.equals(this.shippingAccountNameMatch, threeDSCardholderAccountInfo.shippingAccountNameMatch) &&
        Objects.equals(this.suspiciousActivityObserved, threeDSCardholderAccountInfo.suspiciousActivityObserved);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountAge, accountLastChanged, accountChangeDate, accountCreatedDate, accountPwdLastChanged, accountPwdChangeDate, purchaseCountHalfYear, transactionCountDay, paymentAccountAge, transactionCountYear, paymentAccountCreated, shippingAddressFirstUsed, shippingAddressUsageDate, shippingAccountNameMatch, suspiciousActivityObserved);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ThreeDSCardholderAccountInfo {\n");
    sb.append("    accountAge: ").append(toIndentedString(accountAge)).append("\n");
    sb.append("    accountLastChanged: ").append(toIndentedString(accountLastChanged)).append("\n");
    sb.append("    accountChangeDate: ").append(toIndentedString(accountChangeDate)).append("\n");
    sb.append("    accountCreatedDate: ").append(toIndentedString(accountCreatedDate)).append("\n");
    sb.append("    accountPwdLastChanged: ").append(toIndentedString(accountPwdLastChanged)).append("\n");
    sb.append("    accountPwdChangeDate: ").append(toIndentedString(accountPwdChangeDate)).append("\n");
    sb.append("    purchaseCountHalfYear: ").append(toIndentedString(purchaseCountHalfYear)).append("\n");
    sb.append("    transactionCountDay: ").append(toIndentedString(transactionCountDay)).append("\n");
    sb.append("    paymentAccountAge: ").append(toIndentedString(paymentAccountAge)).append("\n");
    sb.append("    transactionCountYear: ").append(toIndentedString(transactionCountYear)).append("\n");
    sb.append("    paymentAccountCreated: ").append(toIndentedString(paymentAccountCreated)).append("\n");
    sb.append("    shippingAddressFirstUsed: ").append(toIndentedString(shippingAddressFirstUsed)).append("\n");
    sb.append("    shippingAddressUsageDate: ").append(toIndentedString(shippingAddressUsageDate)).append("\n");
    sb.append("    shippingAccountNameMatch: ").append(toIndentedString(shippingAccountNameMatch)).append("\n");
    sb.append("    suspiciousActivityObserved: ").append(toIndentedString(suspiciousActivityObserved)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("account_age");
    openapiFields.add("account_last_changed");
    openapiFields.add("account_change_date");
    openapiFields.add("account_created_date");
    openapiFields.add("account_pwd_last_changed");
    openapiFields.add("account_pwd_change_date");
    openapiFields.add("purchase_count_half_year");
    openapiFields.add("transaction_count_day");
    openapiFields.add("payment_account_age");
    openapiFields.add("transaction_count_year");
    openapiFields.add("payment_account_created");
    openapiFields.add("shipping_address_first_used");
    openapiFields.add("shipping_address_usage_date");
    openapiFields.add("shipping_account_name_match");
    openapiFields.add("suspicious_activity_observed");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ThreeDSCardholderAccountInfo
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!ThreeDSCardholderAccountInfo.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ThreeDSCardholderAccountInfo is not found in the empty JSON string", ThreeDSCardholderAccountInfo.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("account_age") != null && !jsonObj.get("account_age").isJsonNull()) && !jsonObj.get("account_age").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `account_age` to be a primitive type in the JSON string but got `%s`", jsonObj.get("account_age").toString()));
      }
      if ((jsonObj.get("account_last_changed") != null && !jsonObj.get("account_last_changed").isJsonNull()) && !jsonObj.get("account_last_changed").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `account_last_changed` to be a primitive type in the JSON string but got `%s`", jsonObj.get("account_last_changed").toString()));
      }
      if ((jsonObj.get("account_change_date") != null && !jsonObj.get("account_change_date").isJsonNull()) && !jsonObj.get("account_change_date").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `account_change_date` to be a primitive type in the JSON string but got `%s`", jsonObj.get("account_change_date").toString()));
      }
      if ((jsonObj.get("account_created_date") != null && !jsonObj.get("account_created_date").isJsonNull()) && !jsonObj.get("account_created_date").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `account_created_date` to be a primitive type in the JSON string but got `%s`", jsonObj.get("account_created_date").toString()));
      }
      if ((jsonObj.get("account_pwd_last_changed") != null && !jsonObj.get("account_pwd_last_changed").isJsonNull()) && !jsonObj.get("account_pwd_last_changed").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `account_pwd_last_changed` to be a primitive type in the JSON string but got `%s`", jsonObj.get("account_pwd_last_changed").toString()));
      }
      if ((jsonObj.get("account_pwd_change_date") != null && !jsonObj.get("account_pwd_change_date").isJsonNull()) && !jsonObj.get("account_pwd_change_date").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `account_pwd_change_date` to be a primitive type in the JSON string but got `%s`", jsonObj.get("account_pwd_change_date").toString()));
      }
      if ((jsonObj.get("purchase_count_half_year") != null && !jsonObj.get("purchase_count_half_year").isJsonNull()) && !jsonObj.get("purchase_count_half_year").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `purchase_count_half_year` to be a primitive type in the JSON string but got `%s`", jsonObj.get("purchase_count_half_year").toString()));
      }
      if ((jsonObj.get("transaction_count_day") != null && !jsonObj.get("transaction_count_day").isJsonNull()) && !jsonObj.get("transaction_count_day").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `transaction_count_day` to be a primitive type in the JSON string but got `%s`", jsonObj.get("transaction_count_day").toString()));
      }
      if ((jsonObj.get("payment_account_age") != null && !jsonObj.get("payment_account_age").isJsonNull()) && !jsonObj.get("payment_account_age").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payment_account_age` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payment_account_age").toString()));
      }
      if ((jsonObj.get("transaction_count_year") != null && !jsonObj.get("transaction_count_year").isJsonNull()) && !jsonObj.get("transaction_count_year").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `transaction_count_year` to be a primitive type in the JSON string but got `%s`", jsonObj.get("transaction_count_year").toString()));
      }
      if ((jsonObj.get("payment_account_created") != null && !jsonObj.get("payment_account_created").isJsonNull()) && !jsonObj.get("payment_account_created").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payment_account_created` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payment_account_created").toString()));
      }
      if ((jsonObj.get("shipping_address_first_used") != null && !jsonObj.get("shipping_address_first_used").isJsonNull()) && !jsonObj.get("shipping_address_first_used").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shipping_address_first_used` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shipping_address_first_used").toString()));
      }
      if ((jsonObj.get("shipping_address_usage_date") != null && !jsonObj.get("shipping_address_usage_date").isJsonNull()) && !jsonObj.get("shipping_address_usage_date").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shipping_address_usage_date` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shipping_address_usage_date").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ThreeDSCardholderAccountInfo.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ThreeDSCardholderAccountInfo' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ThreeDSCardholderAccountInfo> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ThreeDSCardholderAccountInfo.class));

       return (TypeAdapter<T>) new TypeAdapter<ThreeDSCardholderAccountInfo>() {
           @Override
           public void write(JsonWriter out, ThreeDSCardholderAccountInfo value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ThreeDSCardholderAccountInfo read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ThreeDSCardholderAccountInfo given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ThreeDSCardholderAccountInfo
  * @throws IOException if the JSON string is invalid with respect to ThreeDSCardholderAccountInfo
  */
  public static ThreeDSCardholderAccountInfo fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ThreeDSCardholderAccountInfo.class);
  }

 /**
  * Convert an instance of ThreeDSCardholderAccountInfo to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

